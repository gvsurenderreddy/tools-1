#!/bin/bash

# test version
#
# by Hiromasa YOSHIMOTO <y@momonga-linux.org>

function error ()
{
	echo $@ > /dev/stderr
	exit 1
}

function usage ()
{
    cat<<EOF > /dev/stderr
usage:
$0  [opts]
    -f         retrieves packages reported as "failed"
    -r         retrieves packages requesting your new report
    -n NUM     retrieves up to N packages (default 100)
    -t         touch specs
    -h         display this help and exit
EOF
    exit 1
}


function download() {
    url=${REPORT_URL/upload.php/download_pkgs.php}
    url="$url?arch=${ARCH}&branch=${BRANCH}"
    url="$url&fail=${req_fail}&req=${req_repo}&num=${num}"

    opt="-q -O -"
    opt="$opt --no-check-certificate"

    wget $opt "$url" 
    
    r=$?
    [ $r -eq 0 ] || error "wget failed."
}

#
conf=report.config

# check arguments and files
[ -f $conf -a -r $conf ] || error "no report.config"
source $conf || error "failed to load $conf"
[ -n "$BRANCH" ] || error "bad config (no BRANCH)"
[ -n "$ARCH" ] || error "bad config (no ARCH)"
[ -n "$REPORT_URL" ] || error "bad config (no REPORT_URL)"
type wget > /dev/null 2>&1 || error "wget is not installed"

req_fail=0
req_repo=0
num=100
mode=
while getopts "frtn:h" opt; do
    case $opt in
	f)
	    req_fail=1
	    ;;
	r)
	    req_repo=1
	    ;;
	t)
	    mode="touch"
	    ;;
	n)
	    num=$OPTARG
	    ;;
	h) 
	    usage
	    ;;
    esac
done
shift $(($OPTIND -1))

if [ 0 -eq "$req_repo" -a 0 -eq "$req_fail" ]; then
    usage
fi

# main

export num req_repo req_fail

case "$mode" in
"touch")
	count=0
	for pkg in `download`; do
	    if [ -f $pkg/$pkg.spec ]; then
		touch $pkg/$pkg.spec
		count=$(($count + 1))
	    fi
	done
	echo "$count package(s) will be rebuilt." > /dev/stderr
	echo "run ../tools/OmoiKondara && ../tools/report-upload" > /dev/stderr
	r=0
	;;
*)
	download
	r=$?
	;;
esac

exit $r
