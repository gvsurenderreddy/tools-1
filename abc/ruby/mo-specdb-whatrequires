#!/usr/bin/ruby -Ku
#
# by Hiromasa YOSHIMOTO <y@momonga-linux.org>

require 'optparse'
require 'set'

Version = "0.0.1"
OPTS = {}

$:.unshift(File.dirname($0))
require 'lib/config.rb'
require 'lib/specdb.rb'

OPTS[:recursion]=1
opt = OptionParser.new
opt.on('-r N', '--recursion=N', 'max depth') {|v| OPTS[:recursion] = Integer(v) }
MoConfig.parse(ARGV,opt)

OPTS[:readonly] = true

d = SpecDB.new
d.open(OPTS[:specdb_filename], OPTS)
db = d.db

pkgs = Set.new
curr = ARGV
curr.map!{|v| v.chomp("/") }

loop=0

while loop < OPTS[:recursion] 
  print "\n" if (loop>0)

  STDERR.puts "loop #{loop}" if (OPTS[:verbose]>1)

  loop += 1

  found = Set.new
  candidates = Set.new

  curr.each do |name|   
    sql = "SELECT capability FROM capa_view WHERE capability GLOB '#{name}' "
    db.execute(sql) do |cand,|
      candidates.add(cand)
    end
  end

  candidates.each do |name|
    sql = "SELECT name FROM require_tbl INNER JOIN specfile_tbl ON owner==id WHERE capability == '#{name}' GROUP BY name"
    db.execute(sql) do |pkg,|
      if !pkgs.include?(pkg) then
        found.add(pkg)
      end
    end
  end
  
  if found.empty? then
    break
  end


  found.each do |name|
    print "#{name}\n"
  end

  pkgs.merge(found)
  curr = found
end # end of while loop

db.close()
# Local Variables:
# mode: ruby
# indent-tabs-mode: nil
# End:
