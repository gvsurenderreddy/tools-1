#!/usr/bin/ruby -Ku
#
# by Hiromasa YOSHIMOTO <y@momonga-linux.org>

require 'optparse'
require 'set'

Version = "0.0.2"
OPTS = {}

$:.unshift(File.dirname($0))
require 'lib/config.rb'
require 'lib/pkgdb.rb'

opt = OptionParser.new
opt.on('-f', '--force_update') {|v| OPTS[:force_update] = v }
MoConfig.parse(ARGV,opt)

d = PkgDB.new
d.open(OPTS[:pkgdb_filename], OPTS)

# update or insert entries to databse
if  ARGV.size == 0 then
  removeQ= Set.new
  d.db.execute("select pkgfile from pkg_tbl") do |pkgfile,|
    removeQ.add(pkgfile)
  end

  addQ=[]
  OPTS[:pkgdir_list].each do |dirname|
    dir = Dir.open("#{OPTS[:pkgdir_base]}/#{dirname}")
    begin
      dir.each do |pkgfile|
        next if ".rpm" != pkgfile[-4,4]
        f = "#{dirname}/#{pkgfile}"
        addQ.push(f)
        removeQ.delete(f)
      end
    ensure
      dir.close
    end
  end

  d.update_list(addQ, OPTS)

  # delete entries which are not updated
  d.delete_list(removeQ, OPTS)
else
  momo_assert{ OPTS[:pkgdir_base][-1] != '/' }

  addQ = []
  ARGV.each do |f|
    f = File.expand_path(f)
    f.sub!("#{OPTS[:pkgdir_base]}/", "")
    addQ.push(f)
  end
  d.update_list(addQ, OPTS)
end

d.check(OPTS)

d.close

# Local Variables:
# mode: ruby
# indent-tabs-mode: nil
# End:

